#!/usr/bin/env ruby


require 'openssl'

require 'rubygems'
require 'bundler'
Bundler.setup(:default)

require 'soup-client'
require 'tumblr_client'
require 'yaml'


Tumblr.configure do |config|
  path = File.join ENV['HOME'], '.tumblr'
  configuration = YAML.load_file path
  Tumblr::Config::VALID_OPTIONS_KEYS.each do |key|
    config.send(:"#{key}=", configuration[key.to_s])
  end
end


config_file = File.join(File.dirname(__FILE__), 'config.yml')
config = YAML.load_file config_file

latest_file = File.join(File.dirname(__FILE__), 'latest')

limit = nil
begin
  limit = File.readlines(latest_file)[0].to_i
rescue
end


tumblr = Tumblr::Client.new
options = {}

ids = Set.new
items = []
catch :done do
  loop do
    posts = tumblr.posts(config['tumblr']['url'], options)
    throw :done if posts['posts'].empty?

    posts['posts'].each do |post|
      throw :done if limit and post['id'] <= limit

      items.unshift post if ids.add? post['id']
    end

    break if not (posts['_links'] and posts['_links']['next'])

    options = posts['_links']['next']['query_params']
  end
end

soup = Soup::Client.new(config['soup']['username'], config['soup']['password'])
soup.login


items.each do |item|
  next if not item['photos']

  desc = item['caption']
  link = item['post_url']

  item['photos'].reverse_each do |photo|
    loop do
      begin
        sleep 10
        soup.new_image(photo['original_size']['url'], link, desc)
        break
      rescue
        puts 'Retrying...'
        sleep 50
      end
    end
  end

  File.open(latest_file, 'w') do |f|
    f.puts item['id']
  end
end
